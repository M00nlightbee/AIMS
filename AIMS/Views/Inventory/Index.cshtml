<!-- Inventory Index View -->
@model IEnumerable<AIMS.Models.Product>

@{
    ViewData["Title"] = "Index";
}

<div class="col-md-10 ms-sm-auto px-md-4">
    <section class="inventory-controls mt-4">
        <h2>Inventory</h2>
        <div class="row g-3">
            <div class="col-md-3">
                <input type="text" class="form-control" id="searchInput" placeholder="Search by item..." oninput="filterTable()">
            </div>
            <div class="col-md-2">
                <select class="form-select">
                    <option value="">Branch</option>
                    <option value="Sheffield">Sheffield</option>
                    <option value="London">London</option>
                    <option value="Derby">Derby</option>
                </select>
            </div>
            <div class="col-md-2">
                <select class="form-select">
                    <option value="">Category</option>
                    <option value="Clothing">Clothing</option>
                    <option value="Accessories">Accessories</option>
                    <option value="Hats">Hats</option>
                </select>
            </div>
            <div class="col-md-3">
                <a class="btn btn-dark w-100" asp-action="Create">+ Add Product</a>
            </div>
        </div>
    </section>

    <!-- Inventory Table -->
    <section class="inventory-table mt-4" id="all-inventory-table-flex">
        <table class="table table-striped align-middle" id="inventoryTable">
            <thead class="table-dark">
                <tr>
                    <th>Item</th>
                    <th>Category</th>
                    <th>Branch</th>
                    <th>Quantity</th>
                    <th>Unit Price</th>
                    <th>Size</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="inventoryTableBody">
                @if (Model == null)
                {
                    <tr>
                        <td colspan="7" class="text-center">No Model Data</td>
                    </tr>
                }
                else
                {
                    @foreach (var p in Model)
                    {
                        <tr>
                            <td>@p.ProductName</td>
                            <td>@p.Category</td>
                            <td>@p.Branch</td>
                            <td>
                                @if (p.Quantity <= 20)
                                {
                                    <span class="text-danger">@p.Quantity</span>
                                }
                                else
                                {
                                    @p.Quantity
                                }
                            </td>
                            <td>@string.Format(new System.Globalization.CultureInfo("en-GB"), "{0:C2}", p.Price)</td>
                            <td>@p.ProductSize</td>
                            <td>
                                <a class="btn btn-sm btn-outline-secondary" asp-action="Edit" asp-route-id="@p.ProductId">✎ Edit</a>
                                <a class="btn btn-sm btn-outline-danger" asp-action="Delete" asp-route-id="@p.ProductId">🗑 Delete</a>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </section>

    <!-- Generate Report Button -->
    <div class="mt-3">
        <button id="generateReport" class="btn btn-primary">Generate Inventory Report</button>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const generateReport = document.getElementById('generateReport');
        const table = document.getElementById('inventoryTable');

        generateReport.addEventListener('click', () => {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();

            let y = 20;
            doc.text('Inventory Report', 14, 10);
            doc.setFontSize(10);

            // Add headers
            const headers = Array.from(table.querySelectorAll('thead th')).map(th => th.textContent.trim());
            doc.text(headers.join(' | '), 14, y);
            y += 10;

            // Add data rows
            const rows = table.querySelectorAll('tbody tr');
            rows.forEach(row => {
                if (row.style.display !== 'none') { // Include only visible rows
                    const cells = Array.from(row.querySelectorAll('td:not(:last-child)')).map(td => td.textContent.trim());
                    doc.text(cells.join(' | '), 14, y);
                    y += 10;
                }
            });

            doc.save('inventory_report.pdf');
        });
    });
</script>
